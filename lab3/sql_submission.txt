SQL Assignment Submission

=== 1
create view NumberOfMedals as
	select c.name, count(p.country_id) as count
	from players p, results r, countries c
	where p.player_id = r.player_id and c.country_id = p.country_id
	group by p.country_id, c.name;
select * from NumberOfMedals;
**************** RESULT ***************************************************************
                   name                   | count 
------------------------------------------+-------
 Zimbabwe                                 |     3
 Belarus                                  |     8
 France                                   |    12
 Kazakhstan                               |     2
 Austria                                  |     3
 Mexico                                   |     3
 Czech Republic                           |     4
 Estonia                                  |     2
 Eritrea                                  |     1
 Turkey                                   |     1
 Greece                                   |     9
 Jamaica                                  |    29
 Dominican Republic                       |     1
 Denmark                                  |     3
 Barbados                                 |     1
 Romania                                  |    13
 Spain                                    |     4
 Netherlands                              |    27
 Argentina                                |     1
 Slovakia                                 |     2
 Kenya                                    |    14
 Japan                                    |    21
 Finland                                  |     1
 Hungary                                  |     4
 Poland                                   |     9
 United Kingdom                           |    15
 Saudi Arabia                             |     1
 Brazil                                   |     9
 Latvia                                   |     2
 Trinidad and Tobago                      |     3
 Morocco                                  |     7
 China                                    |     8
 Canada                                   |     1
 Slovenia                                 |     1
 Lithuania                                |     3
 Ireland                                  |     1
=============================================================================================

=== 2
a)
select R.a, R.b, S.c, S.d
from R inner join S on R.c = S.c or (R.c is null and S.c is null);

b)
select R.a, R.b, R.c, S.c
from R inner join S on R.c is null and S.c is null;

select R.c, S.c, S.c, S.d
from R inner join S on R.c is null and S.c is null;
**************** RESULT ***************************************************************
a)
     a      | b  | c  |     d      
------------+----+----+------------
 a3         | 30 | 30 | d1        
 a4         |  0 |    | d2        
(2 rows)

b)
     a      | b | c | c 
------------+---+---+---
 a4         | 0 |   |  
(1 row)

 c | c | c |     d      
---+---+---+------------
   |   |   | d2        
(1 row)
=============================================================================================

=== 3
CREATE OR REPLACE FUNCTION insert_teammedals() RETURNS TRIGGER AS $_$
DECLARE
  ret_val record;
  already_exist record;
BEGIN
  select country_id, e.event_id, new.medal, new.result
  into ret_val
  from events e, players p, results r
  where e.event_id = new.event_id 
  and e.is_team_event = 1 
  and p.player_id = new.player_id;

  IF FOUND THEN
    select * into already_exist from teammedals t
    where t.country_id = ret_val.country_id and t.event_id = ret_val.event_id
    and t.medal = ret_val.medal and t.result = ret_val.result;
    IF FOUND THEN
      --raise notice 'Found: %', already_exist;
    ELSE
      --raise notice 'Not Found';
      insert into teammedals values
      (ret_val.country_id, ret_val.event_id, ret_val.medal, ret_val.result);
    END IF;
  END IF;
  RETURN NEW;
END;
$_$ LANGUAGE plpgsql;

create trigger update_teammedals
	after insert on results
	for each row
	execute procedure insert_teammedals();
**************** RESULT ***************************************************************
// Prep the other tables
insert into events values ('E1000', 'test event', 'TEST', 'SYD2000', 1, 4, 'TESTING');
insert into players values ('TEST 01', 'TEST01', 'USA', '1978-04-21');
insert into players values ('TEST 02', 'TEST02', 'USA', '1978-04-21');
// Insert into results table
insert into results values ('E1000', 'TEST01', 'GOLD', 0.0);
insert into results values ('E1000', 'TEST02', 'GOLD', 0.0);
// Display results table
select * from teammedals where event_id like '%E1000%';

 country_id | event_id |  medal  | result 
------------+----------+---------+--------
 USA        | E1000    | GOLD    |      0
(1 row)
=============================================================================================

=== 4
CREATE OR REPLACE FUNCTION gen_xml() RETURNS text AS $xml$
DECLARE
  curr record;
  prev record;
  result text := E'<medal>\n';
  prev_null_check integer := 0;
  currInPlayersBlock integer := 0;
BEGIN
  FOR curr in
    select e.name as event, p.name as player
    from events e, results r, players p
    where e.olympic_id like '%ATH2004%'
    and r.medal like '%GOLD%'
    and e.event_id = r.event_id
    and r.player_id = p.player_id
    and p.country_id like '%USA%' LOOP
      IF prev_null_check = 0 THEN
	result := result || E'\t<event>' || curr.event || E'</event>\n';
        prev_null_check := 1;
      ELSE
        IF prev.event = curr.event THEN
          IF currInPlayersBlock = 0 THEN
            currInPlayersBlock := 1;
            result := result || E'\t<players>\n';
          END IF;
          result := result || E'\t\t<player>' || prev.player || E'</player>\n';
        ELSE
          IF currInPlayersBlock = 1 THEN
            currInPlayersBlock := 0;
            result := result || E'\t\t<player>' || prev.player || E'</player>\n';
            result := result || E'\t</players>\n';
          ELSE
            result := result || E'\t<player>' || prev.player || E'</player>\n';
          END IF;
          result := result || E'</medal>\n<medal>\n\t<event>' || curr.event || E'</event>\n';
        END IF;
      END IF;
    prev := curr;
  END LOOP;

  return result;
END $xml$
LANGUAGE plpgsql;
**************** RESULT ***************************************************************
                       gen_xml                       
-----------------------------------------------------
 <medal>                                            +
         <event>100m Men</event>                    +
         <player>Justin Gatlin</player>             +
 </medal>                                           +
 <medal>                                            +
         <event>200m Men</event>                    +
         <player>Shawn Crawford</player>            +
 </medal>                                           +
 <medal>                                            +
         <event>400m Men</event>                    +
         <player>Jeremy Wariner</player>            +
 </medal>                                           +
 <medal>                                            +
         <event>4x400m Relay Men</event>            +
         <players>                                  +
                 <player>Jeremy Wariner</player>    +
                 <player>Darold Williamson</player> +
                 <player>Otis Harris Jr</player>    +
                 <player>Derrick Brew</player>      +
         </players>                                 +
 </medal>                                           +
 <medal>                                            +
         <event>Pole Vault Men</event>              +
         <player>Timothy Mack</player>              +
 </medal>                                           +
 <medal>                                            +
         <event>Long Jump Men</event>               +
         <player>Dwight Phillips</player>           +
 </medal>                                           +
 <medal>                                            +
         <event>100m Hurdles Women</event>          +
         <player>Joanna Hayes</player>              +
 </medal>                                           +
 <medal>                                            +
         <event>4x400m Relay Women</event>          +
         <players>                                  +
                 <player>Deedee Trotter</player>    +
                 <player>Sanya Richards</player>    +
                 <player>Monique Henderson</player> +
=============================================================================================

